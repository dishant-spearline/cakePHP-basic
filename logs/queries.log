2023-02-08 04:47:16 Debug: duration=1 rows=1 SHOW TABLES FROM `cakephp3_basics_db`
2023-02-08 04:47:16 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 04:47:16 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 04:47:16 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 04:47:16 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 04:47:17 Debug: duration=1 rows=2 SHOW TABLES FROM `cakephp3_basics_db`
2023-02-08 04:47:17 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 04:47:17 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-08 04:47:17 Debug: duration=4 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 04:47:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 04:52:30 Debug: duration=2 rows=2 SHOW TABLES FROM `cakephp3_basics_db`
2023-02-08 04:52:30 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 04:52:30 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-08 04:52:30 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 04:52:30 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 04:52:30 Debug: duration=1 rows=5 SHOW FULL COLUMNS FROM `phinxlog`
2023-02-08 04:52:30 Debug: duration=5 rows=1 SHOW INDEXES FROM `phinxlog`
2023-02-08 04:52:30 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'phinxlog' AND rc.TABLE_NAME = 'phinxlog'
2023-02-08 04:52:30 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'phinxlog'
2023-02-08 04:52:30 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 04:52:30 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 04:52:30 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 04:52:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 05:00:00 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 05:00:00 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 05:00:00 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 05:00:00 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 05:00:00 Debug: duration=0 rows=0 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 05:00:00 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 05:00:08 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.modified asc LIMIT 20 OFFSET 0
2023-02-08 05:00:08 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 05:00:09 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created asc LIMIT 20 OFFSET 0
2023-02-08 05:00:09 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 05:00:10 Debug: duration=2 rows=0 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.phone asc LIMIT 20 OFFSET 0
2023-02-08 05:00:10 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 05:00:11 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.password asc LIMIT 20 OFFSET 0
2023-02-08 05:00:11 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 05:00:12 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.phone asc LIMIT 20 OFFSET 0
2023-02-08 05:00:12 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 05:00:15 Debug: duration=2 rows=0 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.phone desc LIMIT 20 OFFSET 0
2023-02-08 05:00:15 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 05:00:15 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.phone asc LIMIT 20 OFFSET 0
2023-02-08 05:00:15 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 05:00:16 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.phone desc LIMIT 20 OFFSET 0
2023-02-08 05:00:16 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 05:00:18 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.id asc LIMIT 20 OFFSET 0
2023-02-08 05:00:18 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 05:02:56 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 05:02:56 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-08 05:02:56 Debug: duration=5 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 05:02:56 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 05:02:56 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 05:02:56 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 05:10:26 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 05:10:26 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-08 05:10:26 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 05:10:26 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 05:10:26 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 05:10:26 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 05:10:45 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 1 LIMIT 1
2023-02-08 05:11:07 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 1 LIMIT 1
2023-02-08 05:39:28 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 05:39:28 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-08 05:39:28 Debug: duration=4 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 05:39:28 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 05:42:51 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 05:42:51 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 05:42:51 Debug: duration=4 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 05:42:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 05:45:07 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 05:45:07 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-08 05:45:07 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 05:45:07 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 05:48:27 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 05:48:27 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-08 05:48:27 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 05:48:27 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 06:02:44 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 06:02:44 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 06:02:44 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 06:02:44 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 06:02:58 Debug: duration=0 rows=0 BEGIN
2023-02-08 06:02:58 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'yourmail@gmail.com' LIMIT 1
2023-02-08 06:02:58 Debug: duration=1 rows=1 INSERT INTO users (email, password, phone, created, modified) VALUES ('yourmail@gmail.com', 'ddADADAD', 'AdAD', '2023-02-08 06:02:58', '2023-02-08 06:02:58')
2023-02-08 06:02:58 Debug: duration=0 rows=0 COMMIT
2023-02-08 06:02:58 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 06:02:58 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 06:03:10 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 1 LIMIT 1
2023-02-08 06:03:10 Debug: duration=0 rows=0 BEGIN
2023-02-08 06:03:10 Debug: duration=1 rows=1 DELETE FROM users WHERE id = 1
2023-02-08 06:03:10 Debug: duration=0 rows=0 COMMIT
2023-02-08 06:03:10 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 06:03:10 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 06:03:13 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 06:03:13 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 06:04:51 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 06:04:51 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-08 06:04:51 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 06:04:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 06:04:51 Debug: duration=0 rows=0 BEGIN
2023-02-08 06:04:51 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'yourmail@gmail.com' LIMIT 1
2023-02-08 06:04:51 Debug: duration=0 rows=1 INSERT INTO users (email, password, phone, created, modified) VALUES ('yourmail@gmail.com', 'Password', '1234567890', '2023-02-08 06:04:51', '2023-02-08 06:04:51')
2023-02-08 06:04:51 Debug: duration=0 rows=0 COMMIT
2023-02-08 06:04:51 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 06:04:51 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 06:05:06 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 06:05:06 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 06:05:09 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 2 LIMIT 1
2023-02-08 06:10:42 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 06:10:42 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 06:10:42 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 06:10:42 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 06:10:42 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 06:10:42 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 06:20:29 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 06:20:29 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-08 06:20:29 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 06:20:29 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 06:20:29 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 06:20:29 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 06:22:42 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 06:22:42 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-08 06:22:42 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 06:22:42 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 06:37:56 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 06:37:56 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 06:37:56 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 06:37:56 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 06:42:47 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 06:42:47 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-08 06:42:47 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 06:42:47 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 06:43:00 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 06:43:00 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 06:43:03 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 2 LIMIT 1
2023-02-08 06:43:08 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 2 LIMIT 1
2023-02-08 06:43:15 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 2 LIMIT 1
2023-02-08 06:43:15 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 06:43:15 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 06:43:20 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 06:43:20 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 06:44:51 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 06:44:51 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-08 06:44:51 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 06:44:51 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 06:44:56 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 06:44:56 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 06:45:02 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 2 LIMIT 1
2023-02-08 06:45:07 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 2 LIMIT 1
2023-02-08 06:45:08 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 06:45:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 06:45:11 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 06:45:11 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 06:45:36 Debug: duration=0 rows=0 BEGIN
2023-02-08 06:45:36 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'yourmail1@gmail.com' LIMIT 1
2023-02-08 06:45:36 Debug: duration=0 rows=1 INSERT INTO users (email, password, phone, created, modified) VALUES ('yourmail1@gmail.com', '$2y$10$DWZrQHVGJYT8I4J6LKUc/.wEiYX3O2GIPoLzcUeCsIblARDmeMlEy', '0987654321', '2023-02-08 06:45:36', '2023-02-08 06:45:36')
2023-02-08 06:45:36 Debug: duration=0 rows=0 COMMIT
2023-02-08 06:45:36 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 06:45:36 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 06:45:45 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 2 LIMIT 1
2023-02-08 06:45:50 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 2 LIMIT 1
2023-02-08 06:45:50 Debug: duration=0 rows=0 BEGIN
2023-02-08 06:45:50 Debug: duration=1 rows=1 UPDATE users SET phone = '0987654321' , modified = '2023-02-08 06:45:50' WHERE id = 2
2023-02-08 06:45:50 Debug: duration=0 rows=0 COMMIT
2023-02-08 06:45:50 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 06:45:50 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 06:46:02 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 2 LIMIT 1
2023-02-08 06:46:11 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 2 LIMIT 1
2023-02-08 06:46:11 Debug: duration=0 rows=0 BEGIN
2023-02-08 06:46:11 Debug: duration=0 rows=1 UPDATE users SET password = '$2y$10$KHDUuGn7/chbeafvGGsfmeYqyAjzpfEbcq8ScMeqw/fH0A2zFu61S' , modified = '2023-02-08 06:46:11' WHERE id = 2
2023-02-08 06:46:11 Debug: duration=0 rows=0 COMMIT
2023-02-08 06:46:11 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 06:46:11 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 06:46:21 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-08 06:46:27 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-08 06:46:27 Debug: duration=0 rows=0 BEGIN
2023-02-08 06:46:27 Debug: duration=0 rows=1 SELECT 1 AS `existing` FROM users Users WHERE (Users.email = 'yourmail@gmail.com' AND NOT (Users.id = 3)) LIMIT 1
2023-02-08 06:46:27 Debug: duration=0 rows=0 ROLLBACK
2023-02-08 06:46:38 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 06:46:38 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 06:47:36 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 06:47:36 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 06:47:36 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 06:47:36 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 07:16:01 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 07:16:01 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-08 07:16:01 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 07:16:01 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 08:15:55 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 08:15:55 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-08 08:15:55 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 08:15:55 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 08:25:46 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 08:25:46 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-08 08:25:46 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 08:25:46 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 08:25:46 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail@gmail.com' LIMIT 1
2023-02-08 08:26:19 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail@gmail.com' LIMIT 1
2023-02-08 08:26:19 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 08:26:19 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 08:30:26 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 08:30:26 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 08:30:26 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 08:30:26 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 08:30:26 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 08:30:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 08:40:06 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 08:40:06 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-08 08:40:06 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 08:40:06 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 08:40:06 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 08:40:06 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 08:40:10 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 08:40:10 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 08:40:23 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 08:40:23 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 08:42:31 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 08:42:31 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-08 08:42:31 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 08:42:31 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 08:42:31 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 08:42:31 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 08:42:44 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 08:42:44 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 08:50:33 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 08:50:33 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-08 08:50:33 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 08:50:33 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 08:50:33 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 08:50:33 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 08:50:44 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail@gmail.com' LIMIT 1
2023-02-08 08:50:44 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 08:50:44 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 09:07:45 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 09:07:45 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 09:07:45 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 09:07:45 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 09:07:45 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail@gmail.com' LIMIT 1
2023-02-08 09:07:57 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail@gmail.com' LIMIT 1
2023-02-08 09:07:57 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 09:07:57 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 09:08:10 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 09:08:10 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 09:09:02 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 09:09:02 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 09:09:07 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 09:09:07 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 09:17:12 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 09:17:12 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-08 09:17:12 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 09:17:12 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 09:17:12 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 09:17:12 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 09:17:41 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 09:17:41 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 09:18:01 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 09:18:01 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 09:18:05 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 09:18:05 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 09:18:06 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 09:18:06 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 09:19:03 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 09:19:03 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 09:19:48 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 09:19:48 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 09:19:48 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 09:19:48 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 09:19:48 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 09:19:48 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 09:42:59 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 09:42:59 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-08 09:42:59 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 09:42:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 09:42:59 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 09:42:59 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 09:44:11 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 09:44:11 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 09:44:13 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 09:44:13 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 10:01:14 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 10:01:14 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 10:01:14 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 10:01:14 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 10:01:14 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 10:01:14 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 10:02:04 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 10:02:04 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 10:05:49 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 10:05:49 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 10:05:49 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 10:05:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 10:05:50 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 10:05:50 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 10:09:04 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 10:09:04 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 10:09:04 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 10:09:04 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 10:09:04 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail@gmail.com' LIMIT 1
2023-02-08 10:09:05 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 10:09:05 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 10:09:08 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 10:09:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 10:09:10 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 10:09:10 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 10:09:11 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 10:09:11 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 10:09:12 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 10:09:12 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 10:45:25 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 10:45:25 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-08 10:45:25 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 10:45:25 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 10:45:25 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail@gmail.com' LIMIT 1
2023-02-08 10:45:25 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 10:45:25 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 10:45:30 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 10:45:30 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:10:53 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 11:10:53 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 11:10:53 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 11:10:53 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 11:11:15 Debug: duration=0 rows=0 BEGIN
2023-02-08 11:11:15 Debug: duration=0 rows=1 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'yourmail1@gmail.com' LIMIT 1
2023-02-08 11:11:15 Debug: duration=0 rows=0 ROLLBACK
2023-02-08 11:11:21 Debug: duration=0 rows=0 BEGIN
2023-02-08 11:11:21 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'yourmail4@gmail.com' LIMIT 1
2023-02-08 11:11:21 Debug: duration=0 rows=1 INSERT INTO users (email, password, phone, created, modified) VALUES ('yourmail4@gmail.com', '$2y$10$skQ4FlQdTZDcTJ9pp2GH/.jfqIDlGlZF.23cc7azyRarxCpxoMPxW', '0987654321', '2023-02-08 11:11:21', '2023-02-08 11:11:21')
2023-02-08 11:11:21 Debug: duration=0 rows=0 COMMIT
2023-02-08 11:13:50 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 11:13:50 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-08 11:13:50 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 11:13:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 11:14:03 Debug: duration=0 rows=0 BEGIN
2023-02-08 11:14:03 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'yourmail5@gmail.com' LIMIT 1
2023-02-08 11:14:03 Debug: duration=0 rows=1 INSERT INTO users (email, password, phone, created, modified) VALUES ('yourmail5@gmail.com', '$2y$10$Sy3wwO2079ZvZRacR1nnSuXwKoVekG7Zzw7mQWIY7l/MkumDabiVK', '0987654321', '2023-02-08 11:14:03', '2023-02-08 11:14:03')
2023-02-08 11:14:03 Debug: duration=0 rows=0 COMMIT
2023-02-08 11:14:03 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:14:03 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:14:16 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:14:16 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:14:32 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail5@gmail.com' LIMIT 1
2023-02-08 11:14:32 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:14:32 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:15:32 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail@gmail.com' LIMIT 1
2023-02-08 11:15:32 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:15:32 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:15:36 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:15:36 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:15:45 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 2 LIMIT 1
2023-02-08 11:22:31 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 11:22:31 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-08 11:22:31 Debug: duration=5 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 11:22:31 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 11:22:31 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:22:31 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:22:33 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:22:33 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:22:58 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:22:58 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:23:36 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:23:36 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:25:10 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 11:25:10 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-08 11:25:10 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 11:25:10 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 11:25:10 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:25:10 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:31:09 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 11:31:09 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-08 11:31:09 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 11:31:09 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 11:31:09 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:31:09 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:31:46 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 2 LIMIT 1
2023-02-08 11:31:49 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:31:49 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:32:22 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:32:22 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:32:24 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:32:24 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:32:32 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:32:32 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:32:41 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:32:41 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:33:31 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 11:33:31 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 11:33:31 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 11:33:31 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 11:33:31 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:33:31 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:34:25 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:34:25 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:34:57 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:34:57 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:35:01 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:35:01 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:35:36 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 11:35:36 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-08 11:35:36 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 11:35:36 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 11:35:36 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:35:36 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:36:14 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:36:14 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:37:12 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:37:12 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:37:21 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 2 LIMIT 1
2023-02-08 11:37:21 Debug: duration=0 rows=0 BEGIN
2023-02-08 11:37:21 Debug: duration=1 rows=1 DELETE FROM users WHERE id = 2
2023-02-08 11:37:21 Debug: duration=0 rows=0 COMMIT
2023-02-08 11:37:21 Debug: duration=0 rows=3 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:37:21 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:38:18 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 11:38:18 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 11:38:18 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 11:38:18 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 11:38:18 Debug: duration=0 rows=3 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:38:18 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:38:42 Debug: duration=0 rows=0 BEGIN
2023-02-08 11:38:42 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-08 11:38:42 Debug: duration=0 rows=1 INSERT INTO users (email, password, phone, created, modified) VALUES ('yourmail6@gmail.com', '$2y$10$SfbamGAO0LffuP7.Q7KOS.veTBYSslubJp6eohfqm.kHpBv0cDIlO', '0987654321', '2023-02-08 11:38:42', '2023-02-08 11:38:42')
2023-02-08 11:38:42 Debug: duration=0 rows=0 COMMIT
2023-02-08 11:38:42 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:38:42 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:39:39 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:39:39 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:51:31 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 11:51:31 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 11:51:31 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 11:51:31 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 11:51:31 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:51:32 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:51:41 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:51:41 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:52:02 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:52:02 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:52:09 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:52:09 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:52:15 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:52:15 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:52:20 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:52:20 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:52:44 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:52:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:52:49 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:52:49 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:52:58 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:52:58 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:56:48 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 11:56:48 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-08 11:56:48 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 11:56:48 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 11:56:48 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:56:48 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:57:23 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:57:23 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:57:32 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:57:32 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 11:58:42 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-08 11:58:46 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 11:58:46 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:00:13 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 12:00:13 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 12:00:13 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 12:00:13 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 12:00:13 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 12:00:13 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:00:57 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 12:00:57 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:01:02 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-08 12:01:05 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 12:01:05 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:01:28 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 12:01:28 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:01:43 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-08 12:01:52 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-08 12:01:52 Debug: duration=0 rows=0 BEGIN
2023-02-08 12:01:52 Debug: duration=9 rows=1 UPDATE users SET password = '$2y$10$lZkuE2so0YvIyuiXDd1xbe7ripcrmWBrmYw0yXD6LWGEVmERnvNJa' , modified = '2023-02-08 12:01:52' WHERE id = 3
2023-02-08 12:01:52 Debug: duration=0 rows=0 COMMIT
2023-02-08 12:01:52 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 12:01:52 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:03:47 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 12:03:47 Debug: duration=8 rows=1 SHOW INDEXES FROM `users`
2023-02-08 12:03:47 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 12:03:47 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 12:03:50 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 12:03:50 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:03:56 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 12:03:56 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:03:58 Debug: duration=1 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 12:03:58 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:45:03 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 12:45:03 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-08 12:45:03 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 12:45:03 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 12:45:03 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-08 12:45:03 Debug: duration=0 rows=4 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 12:45:03 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:49:07 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 12:49:07 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 12:49:07 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 12:49:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 12:49:21 Debug: duration=0 rows=0 BEGIN
2023-02-08 12:49:21 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'yourmail7@gmail.com' LIMIT 1
2023-02-08 12:49:21 Debug: duration=1 rows=1 INSERT INTO users (email, password, phone, created, modified) VALUES ('yourmail7@gmail.com', '$2y$10$pNQhiB3HUd89p6lwLbi/geF7Z/HIf1p.mKs07hXpmNYKvawT3vLhy', '1234567890', '2023-02-08 12:49:21', '2023-02-08 12:49:21')
2023-02-08 12:49:21 Debug: duration=0 rows=0 COMMIT
2023-02-08 12:49:21 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 12:49:21 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:49:27 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 7 LIMIT 1
2023-02-08 12:49:30 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 12:49:30 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:53:45 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 12:53:45 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-08 12:53:45 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 12:53:45 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 12:53:45 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 12:53:45 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:53:47 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 12:53:47 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:53:49 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 4 LIMIT 1
2023-02-08 12:53:56 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 12:53:56 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:53:59 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-08 12:54:04 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-08 12:54:07 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-08 12:54:09 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-08 12:55:15 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-08 12:55:18 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 12:55:18 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:55:42 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 12:55:42 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:55:45 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 12:55:45 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:55:46 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-08 12:55:46 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-08 12:55:46 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-08 12:55:46 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-08 12:55:46 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-08 12:55:48 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-08 12:55:50 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 12:55:50 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:55:52 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-08 12:55:52 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-08 12:55:54 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 4 LIMIT 1
2023-02-09 04:03:47 Debug: duration=5 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 04:03:47 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 04:03:47 Debug: duration=6 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 04:03:47 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 04:03:47 Debug: duration=5 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail4@gmail.com' LIMIT 1
2023-02-09 04:03:47 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 04:03:47 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:03:52 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 04:03:52 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:06:14 Debug: duration=5 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 04:06:14 Debug: duration=4 rows=1 SHOW INDEXES FROM `users`
2023-02-09 04:06:14 Debug: duration=5 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 04:06:14 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 04:06:14 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-09 04:06:14 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 04:06:14 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:40:33 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 04:40:33 Debug: duration=4 rows=1 SHOW INDEXES FROM `users`
2023-02-09 04:40:33 Debug: duration=4 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 04:40:33 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 04:40:33 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail4@gmail.com' LIMIT 1
2023-02-09 04:40:33 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 04:40:33 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:41:18 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 04:41:18 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:41:22 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created asc LIMIT 20 OFFSET 0
2023-02-09 04:41:22 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:41:23 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created desc LIMIT 20 OFFSET 0
2023-02-09 04:41:23 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:41:25 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created asc LIMIT 20 OFFSET 0
2023-02-09 04:41:25 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:41:26 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created desc LIMIT 20 OFFSET 0
2023-02-09 04:41:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:42:50 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 04:42:50 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-09 04:42:50 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 04:42:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 04:42:50 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created desc LIMIT 20 OFFSET 0
2023-02-09 04:42:50 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:43:01 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created desc LIMIT 20 OFFSET 0
2023-02-09 04:43:01 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:43:10 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created desc LIMIT 20 OFFSET 0
2023-02-09 04:43:10 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:43:44 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created desc LIMIT 20 OFFSET 0
2023-02-09 04:43:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:45:55 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 04:45:55 Debug: duration=9 rows=1 SHOW INDEXES FROM `users`
2023-02-09 04:45:55 Debug: duration=4 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 04:45:55 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 04:45:55 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created desc LIMIT 20 OFFSET 0
2023-02-09 04:45:55 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:46:20 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created desc LIMIT 20 OFFSET 0
2023-02-09 04:46:20 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:46:24 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created desc LIMIT 20 OFFSET 0
2023-02-09 04:46:24 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:50:41 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 04:50:41 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 04:50:41 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 04:50:41 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 04:50:41 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created desc LIMIT 20 OFFSET 0
2023-02-09 04:50:41 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:51:13 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created desc LIMIT 20 OFFSET 0
2023-02-09 04:51:13 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:52:52 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 04:52:52 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 04:52:52 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 04:52:52 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 04:52:52 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created desc LIMIT 20 OFFSET 0
2023-02-09 04:52:52 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:52:54 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created desc LIMIT 20 OFFSET 0
2023-02-09 04:52:54 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:54:42 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created desc LIMIT 20 OFFSET 0
2023-02-09 04:54:42 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:54:54 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 04:54:54 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 04:54:54 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 04:54:54 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 04:54:54 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created desc LIMIT 20 OFFSET 0
2023-02-09 04:54:54 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:55:25 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created desc LIMIT 20 OFFSET 0
2023-02-09 04:55:25 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:55:41 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created desc LIMIT 20 OFFSET 0
2023-02-09 04:55:41 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:56:08 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created desc LIMIT 20 OFFSET 0
2023-02-09 04:56:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:57:08 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 04:57:08 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 04:57:08 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 04:57:08 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 04:57:08 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.created desc LIMIT 20 OFFSET 0
2023-02-09 04:57:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:58:29 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail5@gmail.com' LIMIT 1
2023-02-09 04:58:36 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail5@gmail.com' LIMIT 1
2023-02-09 04:58:36 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 04:58:36 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:58:48 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 04:58:48 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 04:58:50 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 04:58:50 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 05:04:50 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 05:04:50 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 05:04:50 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 05:04:50 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 05:04:59 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-09 05:04:59 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 05:04:59 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 05:05:04 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 05:05:44 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 05:11:59 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 05:11:59 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 05:11:59 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 05:11:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 05:14:28 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 05:14:28 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 05:14:28 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 05:14:28 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 05:17:03 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 05:17:03 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 05:17:03 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 05:17:03 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 05:23:20 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 05:23:20 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 05:23:20 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 05:23:20 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 05:25:36 Debug: duration=5 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 05:25:36 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-09 05:25:36 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 05:25:36 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 05:34:29 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 05:34:29 Debug: duration=5 rows=1 SHOW INDEXES FROM `users`
2023-02-09 05:34:29 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 05:34:29 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 05:35:20 Debug: duration=2 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail5@gmail.com' LIMIT 1
2023-02-09 05:35:20 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 05:35:20 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 05:35:41 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 05:35:46 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 05:35:46 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 05:44:44 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 05:44:44 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 05:44:44 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 05:44:44 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 05:44:44 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 05:44:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 05:44:46 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 05:44:46 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 05:46:42 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 05:46:42 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 05:47:59 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 05:47:59 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 05:47:59 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 05:47:59 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 05:48:01 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 05:48:01 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 05:51:55 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 05:51:55 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 05:51:55 Debug: duration=4 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 05:51:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 05:51:55 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 05:51:55 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:00:12 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 06:00:12 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 06:00:12 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 06:00:12 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 06:00:24 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail4@gmail.com' LIMIT 1
2023-02-09 06:00:24 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:00:24 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:00:29 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:00:29 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:00:42 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 06:00:44 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:00:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:00:53 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 06:01:01 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:01:01 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:01:35 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-09 06:01:35 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:01:35 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:16:53 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 06:16:53 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 06:16:53 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 06:16:53 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 06:16:53 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:16:53 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:16:58 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:16:58 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:17:04 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:17:04 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:17:10 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:17:10 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:24:34 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 06:24:34 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 06:24:34 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 06:24:34 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 06:24:34 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:24:34 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:25:15 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:25:15 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:25:44 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:25:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:25:54 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:25:54 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:26:02 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:26:02 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:30:58 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 06:30:58 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-09 06:30:58 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 06:30:58 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 06:30:58 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 06:31:02 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:31:02 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:31:07 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:31:07 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:31:09 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 06:36:09 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 06:36:09 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 06:36:09 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 06:36:09 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 06:36:09 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 06:37:01 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 06:37:23 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 06:37:29 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:37:29 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:37:34 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 06:38:22 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 06:38:22 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 06:38:22 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 06:38:22 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 06:38:22 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 06:38:30 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:38:30 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:39:32 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:39:32 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:44:59 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 06:44:59 Debug: duration=4 rows=1 SHOW INDEXES FROM `users`
2023-02-09 06:44:59 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 06:44:59 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 06:44:59 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:44:59 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:52:03 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 06:52:03 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 06:52:03 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 06:52:03 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 06:52:03 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:52:03 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:54:04 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 06:54:04 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 06:54:04 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 06:54:04 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 06:54:04 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:54:04 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:54:17 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 06:54:20 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 06:54:24 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 06:56:42 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 06:56:42 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 06:56:42 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 06:56:42 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 06:56:42 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:56:42 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:56:48 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 06:56:50 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:56:50 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:59:13 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 06:59:13 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 06:59:13 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 06:59:13 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 06:59:13 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:59:13 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:59:31 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-09 06:59:31 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:59:31 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:59:40 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 06:59:40 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 06:59:42 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 07:02:33 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 07:02:33 Debug: duration=4 rows=1 SHOW INDEXES FROM `users`
2023-02-09 07:02:33 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 07:02:33 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 07:02:33 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 07:03:40 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 07:03:59 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 07:03:59 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 07:05:17 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 07:05:17 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 07:05:17 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 07:05:17 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 07:05:17 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 07:05:17 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 07:08:27 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 07:08:27 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 07:08:27 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 07:08:27 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 07:08:27 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 07:08:27 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 07:49:24 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 07:49:24 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 07:49:24 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 07:49:24 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 07:49:24 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail5@gmail.com' LIMIT 1
2023-02-09 07:49:24 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 07:49:24 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 07:49:53 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 07:49:57 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 07:49:57 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 07:49:59 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 07:50:00 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 07:50:00 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 07:50:01 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 07:50:27 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 07:50:27 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 07:51:24 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 07:51:24 Debug: duration=27 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 07:51:35 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 07:51:35 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 07:51:35 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 07:51:35 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 07:51:35 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 07:51:35 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 07:56:10 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 07:56:10 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 07:56:10 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 07:56:10 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 07:56:10 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-09 07:56:12 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 07:56:12 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 08:03:13 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 08:03:13 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 08:03:13 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 08:03:14 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 08:03:14 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 08:03:14 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 09:04:47 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 09:04:47 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 09:04:47 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 09:04:47 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 09:04:47 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail5@gmail.com' LIMIT 1
2023-02-09 09:04:47 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 09:04:47 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 09:05:03 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 09:05:03 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 09:19:24 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 09:19:24 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 09:19:24 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 09:19:24 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 09:19:24 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 09:19:24 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 09:20:31 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 4 LIMIT 1
2023-02-09 09:20:37 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 09:20:37 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 09:20:43 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 5 LIMIT 1
2023-02-09 09:22:53 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 09:22:53 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 09:22:53 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 09:22:53 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 09:22:53 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 09:22:53 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 09:22:55 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 09:22:55 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 09:22:55 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 09:22:55 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 09:49:41 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 09:49:41 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 09:49:41 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 09:49:41 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 09:55:44 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 09:55:44 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 09:55:44 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 09:55:44 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 09:57:49 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 09:57:49 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 09:57:49 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 09:57:49 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 10:10:58 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 10:10:58 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 10:10:58 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 10:10:58 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 10:11:09 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-09 10:11:09 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 10:11:09 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 10:11:16 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 10:11:18 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 10:11:18 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 10:11:26 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 10:11:26 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 10:11:27 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 10:11:27 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 10:16:00 Debug: duration=2 rows=3 SHOW TABLES FROM `cakephp3_basics_db`
2023-02-09 10:16:00 Debug: duration=1 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-09 10:16:00 Debug: duration=1 rows=1 SHOW INDEXES FROM `roles`
2023-02-09 10:16:00 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-09 10:16:00 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-09 10:16:00 Debug: duration=1 rows=5 SHOW FULL COLUMNS FROM `phinxlog`
2023-02-09 10:16:00 Debug: duration=8 rows=1 SHOW INDEXES FROM `phinxlog`
2023-02-09 10:16:00 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'phinxlog' AND rc.TABLE_NAME = 'phinxlog'
2023-02-09 10:16:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'phinxlog'
2023-02-09 10:16:00 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 10:16:00 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 10:16:00 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 10:16:00 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 10:16:00 Debug: duration=1 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-09 10:16:00 Debug: duration=1 rows=1 SHOW INDEXES FROM `roles`
2023-02-09 10:16:00 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-09 10:16:00 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-09 10:23:18 Debug: duration=1 rows=3 SHOW TABLES FROM `cakephp3_basics_db`
2023-02-09 10:23:18 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-09 10:23:18 Debug: duration=2 rows=1 SHOW INDEXES FROM `roles`
2023-02-09 10:23:18 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-09 10:23:18 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-09 10:23:18 Debug: duration=1 rows=5 SHOW FULL COLUMNS FROM `phinxlog`
2023-02-09 10:23:18 Debug: duration=1 rows=1 SHOW INDEXES FROM `phinxlog`
2023-02-09 10:23:18 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'phinxlog' AND rc.TABLE_NAME = 'phinxlog'
2023-02-09 10:23:18 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'phinxlog'
2023-02-09 10:23:18 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 10:23:18 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 10:23:18 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 10:23:18 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 10:23:43 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 10:23:43 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 10:23:43 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 10:23:43 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 10:23:43 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail5@gmail.com' LIMIT 1
2023-02-09 10:23:43 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 10:23:43 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 10:23:51 Debug: duration=4 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-09 10:23:51 Debug: duration=3 rows=1 SHOW INDEXES FROM `roles`
2023-02-09 10:23:51 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-09 10:23:51 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-09 10:23:51 Debug: duration=0 rows=0 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-09 10:23:51 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-09 10:56:33 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 10:56:33 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 10:56:33 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 10:56:33 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 10:56:33 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-09 10:56:33 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 10:56:33 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 10:56:36 Debug: duration=0 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 10:56:36 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 10:56:45 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 10:56:45 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 10:59:08 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 10:59:08 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 10:59:08 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 10:59:08 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 10:59:08 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 10:59:11 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 10:59:11 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 11:13:14 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 11:13:14 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 11:13:14 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 11:13:14 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 11:13:14 Debug: duration=1 rows=5 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 11:13:14 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 11:13:40 Debug: duration=0 rows=0 BEGIN
2023-02-09 11:13:40 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'yourmail8@gmail.com' LIMIT 1
2023-02-09 11:13:40 Debug: duration=14 rows=1 INSERT INTO users (email, password, phone, created, modified) VALUES ('yourmail8@gmail.com', '$2y$10$6aK6m7W0kO0uY1oqcSJntuZ8SwWxZItzLT4venIj5IvxUOnXL88U6', '0987654321', '2023-02-09 11:13:40', '2023-02-09 11:13:40')
2023-02-09 11:13:40 Debug: duration=0 rows=0 COMMIT
2023-02-09 11:13:40 Debug: duration=0 rows=6 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 11:13:40 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 11:16:05 Debug: duration=1 rows=6 SHOW FULL COLUMNS FROM `users`
2023-02-09 11:16:05 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 11:16:05 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 11:16:05 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 11:16:05 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail4@gmail.com' LIMIT 1
2023-02-09 11:16:14 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail4@gmail.com' LIMIT 1
2023-02-09 11:16:14 Debug: duration=0 rows=6 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 11:16:14 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 11:23:10 Debug: duration=5 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-09 11:23:10 Debug: duration=1 rows=1 SHOW INDEXES FROM `roles`
2023-02-09 11:23:10 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-09 11:23:10 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-09 11:23:10 Debug: duration=0 rows=0 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-09 11:23:10 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-09 11:25:56 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-09 11:25:56 Debug: duration=2 rows=1 SHOW INDEXES FROM `roles`
2023-02-09 11:25:56 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-09 11:25:56 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-09 11:25:58 Debug: duration=0 rows=0 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-09 11:25:58 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-09 11:36:38 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-09 11:36:38 Debug: duration=2 rows=1 SHOW INDEXES FROM `roles`
2023-02-09 11:36:38 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-09 11:36:38 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-09 11:36:38 Debug: duration=0 rows=0 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-09 11:36:38 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-09 11:37:40 Debug: duration=0 rows=0 BEGIN
2023-02-09 11:37:40 Debug: duration=0 rows=1 INSERT INTO roles (name, comment) VALUES ('Admin', 'The admin with all privileges for this platform')
2023-02-09 11:37:40 Debug: duration=0 rows=0 COMMIT
2023-02-09 11:37:40 Debug: duration=0 rows=1 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-09 11:37:40 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-09 11:38:52 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-09 11:38:52 Debug: duration=1 rows=1 SHOW INDEXES FROM `roles`
2023-02-09 11:38:52 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-09 11:38:52 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-09 11:38:52 Debug: duration=0 rows=0 BEGIN
2023-02-09 11:38:52 Debug: duration=0 rows=1 INSERT INTO roles (name, comment) VALUES ('Moderator', 'The staff managing this platform')
2023-02-09 11:38:52 Debug: duration=0 rows=0 COMMIT
2023-02-09 11:38:52 Debug: duration=0 rows=2 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-09 11:38:52 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-09 11:39:39 Debug: duration=0 rows=0 BEGIN
2023-02-09 11:39:39 Debug: duration=1 rows=1 INSERT INTO roles (name, comment) VALUES ('User', 'The user of this platform')
2023-02-09 11:39:39 Debug: duration=0 rows=0 COMMIT
2023-02-09 11:39:39 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-09 11:39:39 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-09 12:10:26 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-09 12:10:26 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 12:10:26 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 12:10:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 12:10:26 Debug: duration=0 rows=0 BEGIN
2023-02-09 12:10:26 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-09 12:10:26 Debug: duration=0 rows=1 INSERT INTO users (email, password, phone, created, modified) VALUES ('admin@gmail.com', '$2y$10$NPq/Fel0jRtoms8RtrYcwe5gpfisIjn7qogfCyNEDtPZN621ehC3G', '9999999999', '2023-02-09 12:10:26', '2023-02-09 12:10:26')
2023-02-09 12:10:26 Debug: duration=0 rows=0 COMMIT
2023-02-09 12:10:26 Debug: duration=0 rows=7 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 12:10:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 12:11:20 Debug: duration=0 rows=7 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 12:11:20 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 12:11:26 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-09 12:11:29 Debug: duration=1 rows=7 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 12:11:29 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 12:37:52 Debug: duration=1 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-09 12:37:52 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-09 12:37:52 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 12:37:52 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 12:37:53 Debug: duration=0 rows=0 BEGIN
2023-02-09 12:37:53 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'yourmail9@gmail.com' LIMIT 1
2023-02-09 12:37:53 Debug: duration=0 rows=1 INSERT INTO users (role_id, email, password, phone, created, modified) VALUES (3, 'yourmail9@gmail.com', '$2y$10$1cTSXNG9oqonXsiY1dM3Bui75fGLqabD9RbxssU8xgd/d0LyKbmZe', '0987654321', '2023-02-09 12:37:53', '2023-02-09 12:37:53')
2023-02-09 12:37:53 Debug: duration=0 rows=0 COMMIT
2023-02-09 12:37:53 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 12:37:53 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 12:38:43 Debug: duration=0 rows=0 BEGIN
2023-02-09 12:38:43 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'yourmail10@gmail.com' LIMIT 1
2023-02-09 12:38:43 Debug: duration=0 rows=1 INSERT INTO users (role_id, email, password, phone, created, modified) VALUES (1, 'yourmail10@gmail.com', '$2y$10$UB9aJkf4ZumHHpnW6wKS4.7yhKz4q6qcpoKXD5gopSHTzU12wDLLm', '1234567890', '2023-02-09 12:38:43', '2023-02-09 12:38:43')
2023-02-09 12:38:43 Debug: duration=0 rows=0 COMMIT
2023-02-09 12:38:43 Debug: duration=0 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 12:38:43 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 12:45:44 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-09 12:45:44 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-09 12:45:44 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-09 12:45:44 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-09 12:45:44 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 12:45:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 12:45:45 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 12:45:45 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-09 12:45:47 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-09 12:45:47 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 03:50:14 Debug: duration=18 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 03:50:14 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-10 03:50:14 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 03:50:14 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 03:50:14 Debug: duration=16 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-10 03:50:19 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-10 03:50:19 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 03:50:19 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 03:50:32 Debug: duration=5 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 03:50:32 Debug: duration=3 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 03:50:32 Debug: duration=4 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 03:50:32 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 03:50:32 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 03:50:32 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 04:01:07 Debug: duration=4 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 04:01:07 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-10 04:01:07 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 04:01:07 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 04:01:07 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 04:01:07 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 04:01:15 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 04:01:15 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 04:01:42 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-10 04:01:42 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 04:01:42 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 04:01:47 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 04:01:47 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 04:01:48 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 04:01:48 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 04:02:01 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-10 04:02:03 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 04:02:03 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 04:02:06 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-10 04:02:09 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 04:02:09 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 04:04:07 Debug: duration=4 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 04:04:07 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-10 04:04:07 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 04:04:07 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 04:04:07 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 04:04:07 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 04:04:17 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 04:04:17 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 04:07:46 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 04:07:46 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-10 04:07:46 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 04:07:46 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 04:07:46 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 04:07:46 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 04:07:53 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 04:07:53 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 04:08:07 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-10 04:08:07 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 04:08:07 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 04:13:55 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 04:13:55 Debug: duration=4 rows=1 SHOW INDEXES FROM `users`
2023-02-10 04:13:55 Debug: duration=4 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 04:13:55 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 04:13:55 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-10 04:13:55 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 04:13:55 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 04:13:59 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 04:13:59 Debug: duration=3 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 04:13:59 Debug: duration=4 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 04:13:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 04:13:59 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 04:13:59 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 04:14:16 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 04:14:16 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 04:18:07 Debug: duration=4 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 04:18:07 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-10 04:18:07 Debug: duration=4 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 04:18:07 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 04:18:07 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 04:18:07 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 04:41:40 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 04:41:40 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-10 04:41:40 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 04:41:40 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 04:41:40 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 04:41:40 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 04:42:05 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-10 04:42:06 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 04:42:06 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 04:42:47 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-10 04:42:47 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 9 LIMIT 1
2023-02-10 04:47:37 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 04:47:37 Debug: duration=7 rows=1 SHOW INDEXES FROM `users`
2023-02-10 04:47:37 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 04:47:37 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 04:47:37 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-10 04:50:02 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 04:50:02 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-10 04:50:02 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 04:50:02 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 04:50:02 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 04:51:03 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 04:51:51 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 04:52:48 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 04:52:48 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-10 04:52:48 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 04:52:48 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 04:52:48 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users
2023-02-10 04:55:11 Debug: duration=1 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 04:55:11 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-10 04:55:11 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 04:55:11 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 04:55:11 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 05:01:08 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 05:01:08 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-10 05:01:08 Debug: duration=4 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 05:01:08 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 05:01:08 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 05:03:13 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 05:03:13 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-10 05:03:13 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 05:03:13 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 05:03:13 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 05:04:11 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 05:05:00 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 05:05:00 Debug: duration=3 rows=0 SHOW FULL COLUMNS FROM `user`
2023-02-10 05:06:29 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 05:06:29 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-10 05:06:29 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 05:06:29 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 05:06:29 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 05:06:29 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 05:06:29 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 05:11:47 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 05:11:47 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-10 05:11:47 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 05:11:47 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 05:11:47 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 05:11:57 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 05:18:45 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 05:18:45 Debug: duration=4 rows=1 SHOW INDEXES FROM `users`
2023-02-10 05:18:45 Debug: duration=4 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 05:18:45 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 05:18:45 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users
2023-02-10 05:21:24 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 05:21:24 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-10 05:21:24 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 05:21:24 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 05:21:24 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 05:21:42 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 05:21:52 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 05:22:11 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 05:22:11 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 05:22:11 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 05:29:27 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 05:29:27 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-10 05:29:27 Debug: duration=4 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 05:29:27 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 05:29:27 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-10 05:38:43 Debug: duration=1 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 05:38:43 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-10 05:38:43 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 05:38:43 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 05:38:43 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 05:38:43 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 05:38:55 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-10 05:38:55 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 05:38:55 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 05:39:26 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users
2023-02-10 05:40:39 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 05:40:39 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 05:40:52 Debug: duration=1 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 05:40:52 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-10 05:40:52 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 05:40:52 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 05:40:52 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-10 05:40:52 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 05:40:52 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 05:41:26 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 05:41:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 05:41:56 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-10 05:42:01 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 05:42:01 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 05:44:04 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 05:44:04 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-10 05:44:04 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 05:44:04 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 05:44:04 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 9 LIMIT 1
2023-02-10 05:46:22 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 05:46:22 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-10 05:46:22 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 05:46:22 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 05:46:22 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 9 LIMIT 1
2023-02-10 05:46:25 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 05:46:25 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 05:46:27 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-10 05:46:36 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 05:46:36 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 05:46:45 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail4@gmail.com' LIMIT 1
2023-02-10 05:46:45 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 4 LIMIT 20 OFFSET 0
2023-02-10 05:46:45 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 4
2023-02-10 05:47:07 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 4 LIMIT 1
2023-02-10 05:47:14 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 4 LIMIT 20 OFFSET 0
2023-02-10 05:47:14 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 4
2023-02-10 05:47:16 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 4 LIMIT 1
2023-02-10 05:47:22 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 4 LIMIT 20 OFFSET 0
2023-02-10 05:47:22 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 4
2023-02-10 05:47:26 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 4 LIMIT 1
2023-02-10 05:47:31 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 4 LIMIT 20 OFFSET 0
2023-02-10 05:47:31 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 4
2023-02-10 05:48:45 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 05:48:45 Debug: duration=3 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 05:48:45 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 05:48:45 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 05:48:45 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 05:48:45 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:05:46 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 06:05:46 Debug: duration=1 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 06:05:46 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 06:05:46 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 06:05:46 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:05:46 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:06:17 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:06:17 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:06:28 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:06:28 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:07:16 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:07:16 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:07:27 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 06:07:27 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-10 06:07:27 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 06:07:27 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 06:07:28 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-10 06:07:28 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 06:07:28 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 06:07:33 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:07:33 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:07:57 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail5@gmail.com' LIMIT 1
2023-02-10 06:07:57 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 5 LIMIT 20 OFFSET 0
2023-02-10 06:07:57 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 5
2023-02-10 06:08:00 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 06:08:00 Debug: duration=2 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 06:08:00 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 06:08:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 06:08:00 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:08:00 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:09:58 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:09:58 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:11:27 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 06:11:27 Debug: duration=1 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 06:11:27 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 06:11:27 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 06:11:27 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:11:27 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:11:31 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:11:31 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:11:41 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 06:11:41 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-10 06:11:41 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 06:11:41 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 06:11:41 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail5@gmail.com' LIMIT 1
2023-02-10 06:11:41 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 5 LIMIT 20 OFFSET 0
2023-02-10 06:11:41 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 5
2023-02-10 06:11:44 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:11:44 Debug: duration=3 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:14:55 Debug: duration=1 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 06:14:55 Debug: duration=1 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 06:14:55 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 06:14:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 06:14:55 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:14:55 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:14:56 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:14:56 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:14:56 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:14:56 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:14:56 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:14:56 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:14:56 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:14:56 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:14:56 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:14:56 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:15:11 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:15:11 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:15:14 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:15:14 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:15:23 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:15:23 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:15:30 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 06:15:30 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-10 06:15:30 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 06:15:30 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 06:15:30 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-10 06:15:30 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 06:15:30 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 06:15:35 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:15:35 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:16:22 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:16:22 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:16:37 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:16:37 Debug: duration=34 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:16:39 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:16:39 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:34:14 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 06:34:14 Debug: duration=1 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 06:34:14 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 06:34:14 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 06:34:14 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:34:14 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:34:24 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 06:34:24 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-10 06:34:24 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 06:34:24 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 06:34:24 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-10 06:34:24 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 06:34:24 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 06:34:29 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:34:29 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:35:34 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:35:34 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:35:35 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:35:35 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:35:35 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:35:35 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:35:35 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:35:35 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:35:36 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:35:36 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:36:23 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 06:36:23 Debug: duration=2 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 06:36:23 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 06:36:23 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 06:36:23 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:36:23 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:36:23 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:36:23 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:36:23 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:36:23 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:36:24 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:36:24 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:36:24 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:36:24 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:36:24 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:36:24 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:37:01 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 06:37:01 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-10 06:37:01 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 06:37:01 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 06:37:01 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-10 06:37:01 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 06:37:01 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 06:37:08 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:37:08 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:52:31 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 06:52:31 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-10 06:52:31 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 06:52:31 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 06:52:31 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-10 06:52:36 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-10 06:58:02 Debug: duration=1 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 06:58:02 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-10 06:58:02 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 06:58:02 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 06:58:02 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 06:58:02 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 06:58:14 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 06:58:14 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 06:58:51 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-10 06:58:51 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 06:58:51 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 06:58:54 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 06:58:54 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 06:59:01 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 06:59:01 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 06:59:03 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 06:59:03 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 06:59:14 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-10 06:59:15 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 06:59:15 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 06:59:19 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 06:59:19 Debug: duration=1 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 06:59:19 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 06:59:19 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 06:59:19 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 06:59:19 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 06:59:54 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 06:59:54 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 07:12:03 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 07:12:03 Debug: duration=3 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 07:12:03 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 07:12:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 07:12:03 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 07:12:03 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 07:12:54 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 07:12:54 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 07:13:13 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 07:13:13 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 07:13:46 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 07:13:46 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 07:13:55 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 07:13:55 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 07:14:08 Debug: duration=1 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 07:14:08 Debug: duration=2 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 07:14:08 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 07:14:08 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 07:14:08 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 07:14:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 07:14:18 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 07:14:18 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 07:15:00 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 07:15:00 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 07:15:24 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 07:15:24 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 07:15:37 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 07:15:37 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 07:16:18 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 07:16:18 Debug: duration=2 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 07:16:18 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 07:16:18 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 07:16:18 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 07:16:18 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 07:16:40 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 07:16:40 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 07:18:04 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 07:18:04 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 07:19:10 Debug: duration=1 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 07:19:10 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-10 07:19:10 Debug: duration=4 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 07:19:10 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 07:19:10 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 07:19:10 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 07:19:12 Debug: duration=14 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.email asc LIMIT 20 OFFSET 0
2023-02-10 07:19:12 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 07:19:13 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.email desc LIMIT 20 OFFSET 0
2023-02-10 07:19:13 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 07:20:25 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 07:20:25 Debug: duration=3 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 07:20:25 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 07:20:25 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 07:20:25 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 07:20:25 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 07:21:11 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 07:21:11 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 07:23:10 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 07:23:10 Debug: duration=3 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 07:23:10 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 07:23:10 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 07:23:10 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 07:23:10 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 07:23:12 Debug: duration=0 rows=1 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles WHERE Roles.id = 1 LIMIT 1
2023-02-10 07:23:42 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 07:23:42 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 07:24:01 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 07:24:01 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 07:24:02 Debug: duration=1 rows=1 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles WHERE Roles.id = 1 LIMIT 1
2023-02-10 07:56:35 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 07:56:35 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-10 07:56:35 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 07:56:35 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 07:56:35 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-10 07:56:35 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 07:56:35 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 07:56:41 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 07:56:41 Debug: duration=3 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 07:56:41 Debug: duration=4 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 07:56:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 07:56:41 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 07:56:41 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 07:56:43 Debug: duration=0 rows=1 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles WHERE Roles.id = 1 LIMIT 1
2023-02-10 07:57:05 Debug: duration=0 rows=1 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles WHERE Roles.id = 1 LIMIT 1
2023-02-10 08:00:06 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 08:00:06 Debug: duration=3 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 08:00:06 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 08:00:06 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 08:00:06 Debug: duration=0 rows=1 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles WHERE Roles.id = 1 LIMIT 1
2023-02-10 08:00:11 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 08:00:11 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 08:00:12 Debug: duration=0 rows=1 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles WHERE Roles.id = 2 LIMIT 1
2023-02-10 08:00:15 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 08:00:15 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 08:01:13 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 08:01:13 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 08:01:14 Debug: duration=1 rows=1 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles WHERE Roles.id = 1 LIMIT 1
2023-02-10 08:01:16 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 08:01:16 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 08:01:19 Debug: duration=0 rows=1 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles WHERE Roles.id = 1 LIMIT 1
2023-02-10 08:01:21 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 08:01:21 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 08:01:43 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 08:01:43 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 08:02:00 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 08:02:00 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 08:02:14 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 08:02:14 Debug: duration=4 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 08:02:14 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 08:02:14 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 08:02:14 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 08:02:14 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 08:02:20 Debug: duration=1 rows=1 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles WHERE Roles.id = 1 LIMIT 1
2023-02-10 08:02:22 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 08:02:22 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 08:04:04 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 08:04:04 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 08:04:22 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 08:04:22 Debug: duration=3 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 08:04:22 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 08:04:22 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 08:04:22 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 08:04:22 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 08:12:12 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 08:12:12 Debug: duration=4 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 08:12:12 Debug: duration=5 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 08:12:12 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 09:18:20 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 09:18:20 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-10 09:18:20 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 09:18:20 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 09:18:20 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-10 09:18:26 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-10 09:18:26 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 09:18:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 09:18:43 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 09:19:14 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 09:19:14 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 09:19:40 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 09:19:40 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 09:24:06 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 09:24:06 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-10 09:24:06 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 09:24:06 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 09:24:06 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 09:29:07 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 09:29:07 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-10 09:29:07 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 09:29:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 09:29:07 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 09:29:16 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 09:29:18 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 09:29:19 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 09:29:28 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 09:29:53 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 09:30:02 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 09:32:41 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 09:32:41 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-10 09:32:41 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 09:32:41 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 09:32:41 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 09:33:18 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 09:33:18 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 09:33:22 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 09:33:26 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 09:33:36 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 09:33:36 Debug: duration=0 rows=0 BEGIN
2023-02-10 09:33:36 Debug: duration=85 rows=1 UPDATE users SET password = '$2y$10$co4oJd7/149VA26dfam1wems63JM1.XETJGOB3IHZMjiSLS/O3qMu' , modified = '2023-02-10 09:33:36' WHERE id = 6
2023-02-10 09:33:36 Debug: duration=0 rows=0 COMMIT
2023-02-10 09:33:36 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 09:33:36 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 09:33:52 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-10 09:33:56 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-10 09:33:56 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 09:33:56 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 09:37:05 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 09:37:05 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-10 09:37:05 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 09:37:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 09:37:05 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 09:37:08 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 09:37:10 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-10 09:37:10 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 09:37:10 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 09:42:00 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 09:42:00 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-10 09:42:00 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 09:42:00 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 09:42:00 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 09:42:00 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 09:42:10 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-10 09:42:11 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 09:42:11 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 09:42:26 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.phone asc LIMIT 20 OFFSET 0
2023-02-10 09:42:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 09:42:27 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.phone desc LIMIT 20 OFFSET 0
2023-02-10 09:42:27 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 09:42:29 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.id asc LIMIT 20 OFFSET 0
2023-02-10 09:42:29 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 09:42:31 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.id desc LIMIT 20 OFFSET 0
2023-02-10 09:42:31 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 09:42:32 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users ORDER BY Users.id asc LIMIT 20 OFFSET 0
2023-02-10 09:42:32 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 10:34:44 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 10:34:44 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-10 10:34:44 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 10:34:44 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 10:34:44 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-10 10:34:51 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-10 10:34:52 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 10:34:52 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 10:35:31 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 10:35:31 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 10:42:10 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 10:42:10 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-10 10:42:10 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 10:42:10 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 10:42:10 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-10 10:42:10 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-10 12:30:17 Debug: duration=1 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 12:30:17 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-10 12:30:17 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 12:30:17 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 12:30:17 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-10 12:30:17 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 12:30:17 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 12:30:23 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 12:30:23 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 12:30:26 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 9 LIMIT 1
2023-02-10 12:30:28 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 12:30:28 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 12:30:31 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 12:30:31 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 12:30:32 Debug: duration=1 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-10 12:30:32 Debug: duration=1 rows=1 SHOW INDEXES FROM `roles`
2023-02-10 12:30:32 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-10 12:30:32 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-10 12:30:32 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 12:30:32 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 12:30:33 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 12:30:33 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 12:30:35 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-10 12:30:35 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-10 12:30:37 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 12:30:37 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 12:30:39 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 12:30:39 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-10 12:30:48 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail5@gmail.com' LIMIT 1
2023-02-10 12:30:48 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 5 LIMIT 20 OFFSET 0
2023-02-10 12:30:48 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 5
2023-02-10 12:30:52 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 5 LIMIT 20 OFFSET 0
2023-02-10 12:30:52 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 5
2023-02-10 12:34:00 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 12:34:00 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-10 12:34:00 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 12:34:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 12:34:00 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 5 LIMIT 20 OFFSET 0
2023-02-10 12:34:00 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 5
2023-02-10 12:34:05 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 5 LIMIT 20 OFFSET 0
2023-02-10 12:34:05 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 5
2023-02-10 12:44:07 Debug: duration=1 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-10 12:44:07 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-10 12:44:07 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-10 12:44:07 Debug: duration=12 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-10 12:44:07 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-10 12:44:07 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-10 12:44:07 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 04:06:03 Debug: duration=12 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 04:06:03 Debug: duration=5 rows=1 SHOW INDEXES FROM `users`
2023-02-13 04:06:03 Debug: duration=4 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 04:06:03 Debug: duration=5 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 04:06:03 Debug: duration=8 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-13 04:06:08 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-13 04:06:08 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-13 04:06:08 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-13 04:07:16 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-13 04:07:16 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 04:07:16 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 04:12:27 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 04:12:27 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-13 04:12:27 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 04:12:27 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 04:12:27 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-13 04:12:27 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-13 04:12:27 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-13 04:12:33 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-13 04:21:02 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 04:21:02 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-13 04:21:02 Debug: duration=5 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 04:21:02 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 04:21:02 Debug: duration=2 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 6 LIMIT 1
2023-02-13 04:29:31 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 04:29:31 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-13 04:29:31 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 04:29:31 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 04:29:31 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-13 04:29:32 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 04:29:32 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 04:29:36 Debug: duration=4 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-13 04:29:36 Debug: duration=6 rows=1 SHOW INDEXES FROM `roles`
2023-02-13 04:29:36 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-13 04:29:36 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-13 04:29:36 Debug: duration=2 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-13 04:29:36 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-13 04:29:43 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 04:29:43 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 04:29:43 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-13 04:29:43 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-13 04:29:44 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 04:29:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 04:29:48 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 04:29:48 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 04:29:49 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-13 04:29:49 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-13 04:29:55 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-13 04:29:55 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-13 04:29:57 Debug: duration=1 rows=1 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles WHERE Roles.id = 1 LIMIT 1
2023-02-13 04:30:00 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-13 04:30:00 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-13 04:30:04 Debug: duration=1 rows=1 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles WHERE Roles.id = 1 LIMIT 1
2023-02-13 04:30:06 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-13 04:30:06 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-13 04:33:13 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 04:33:13 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-13 04:33:13 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 04:33:13 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 04:33:13 Debug: duration=0 rows=0 BEGIN
2023-02-13 04:33:13 Debug: duration=0 rows=1 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-13 04:33:13 Debug: duration=0 rows=0 ROLLBACK
2023-02-13 04:34:18 Debug: duration=0 rows=0 BEGIN
2023-02-13 04:34:18 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-13 04:34:18 Debug: duration=0 rows=0 ROLLBACK
2023-02-13 04:52:38 Debug: duration=4 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 04:52:38 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-13 04:52:38 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 04:52:38 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 04:52:38 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-13 04:52:38 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 04:52:38 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 04:53:13 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 04:53:13 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 04:53:21 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 04:53:21 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 04:53:26 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 04:53:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 04:53:30 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 04:53:30 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 04:53:41 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 04:53:41 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 04:54:31 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 04:54:31 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 04:56:44 Debug: duration=1 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 04:56:44 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-13 04:56:44 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 04:56:44 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 04:56:44 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 04:56:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 04:57:15 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 04:57:15 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 04:57:31 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 04:57:31 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:06:11 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 05:06:11 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-13 05:06:11 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 05:06:11 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 05:06:11 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-13 05:06:11 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:06:11 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:06:16 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-13 05:06:16 Debug: duration=2 rows=1 SHOW INDEXES FROM `roles`
2023-02-13 05:06:16 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-13 05:06:16 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-13 05:06:16 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-13 05:06:16 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-13 05:06:17 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:06:17 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:06:19 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:06:19 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:06:33 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-13 05:06:33 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-13 05:07:05 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-13 05:07:05 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:07:05 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:08:11 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:08:11 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:08:20 Debug: duration=4 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 05:08:20 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-13 05:08:20 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 05:08:20 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 05:08:20 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:08:36 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:08:38 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:08:40 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:08:42 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 9 LIMIT 1
2023-02-13 05:08:44 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:08:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:08:44 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-13 05:08:44 Debug: duration=1 rows=1 SHOW INDEXES FROM `roles`
2023-02-13 05:08:44 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-13 05:08:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-13 05:08:44 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-13 05:08:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-13 05:09:37 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-13 05:09:37 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-13 05:09:40 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-13 05:09:40 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-13 05:09:40 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:09:40 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:09:42 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 9 LIMIT 1
2023-02-13 05:09:46 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:09:46 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:09:49 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:09:51 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:09:51 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:09:56 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 4 LIMIT 1
2023-02-13 05:09:57 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:09:57 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:11:47 Debug: duration=1 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 05:11:47 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-13 05:11:47 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 05:11:47 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 05:11:47 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 7 LIMIT 1
2023-02-13 05:25:37 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 05:25:37 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-13 05:25:37 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 05:25:37 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 05:25:37 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-13 05:25:37 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-13 05:25:37 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-13 05:25:41 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-13 05:25:41 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-13 05:26:46 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-13 05:26:47 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:26:47 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:31:05 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 05:31:05 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-13 05:31:05 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 05:31:05 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 05:31:05 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-13 05:31:10 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-13 05:31:10 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-13 05:31:10 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-13 05:31:12 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-13 05:31:12 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-13 05:33:11 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 05:33:11 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-13 05:33:11 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 05:33:11 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 05:33:11 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail6@gmail.com' LIMIT 1
2023-02-13 05:33:11 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 6 LIMIT 20 OFFSET 0
2023-02-13 05:33:12 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 6
2023-02-13 05:33:21 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-13 05:33:21 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:33:21 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:33:26 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:33:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:33:27 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-13 05:33:27 Debug: duration=3 rows=1 SHOW INDEXES FROM `roles`
2023-02-13 05:33:27 Debug: duration=5 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-13 05:33:27 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-13 05:33:27 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-13 05:33:27 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-13 05:33:32 Debug: duration=1 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-13 05:33:32 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-13 05:33:34 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:33:34 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:42:14 Debug: duration=4 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 05:42:14 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-13 05:42:14 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 05:42:14 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 05:42:14 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:42:14 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:42:20 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:43:30 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:43:50 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:43:50 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:43:53 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:44:59 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 05:44:59 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-13 05:44:59 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 05:44:59 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 05:44:59 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:45:08 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:45:08 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:45:08 Debug: duration=5 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:45:32 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:45:37 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:45:37 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:45:44 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `roles`
2023-02-13 05:45:44 Debug: duration=1 rows=1 SHOW INDEXES FROM `roles`
2023-02-13 05:45:44 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2023-02-13 05:45:44 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2023-02-13 05:45:44 Debug: duration=0 rows=3 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name`, Roles.comment AS `Roles__comment` FROM roles Roles LIMIT 20 OFFSET 0
2023-02-13 05:45:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM roles Roles
2023-02-13 05:45:46 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:45:46 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:45:47 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:46:58 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:47:01 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 05:47:01 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-13 05:47:01 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 05:47:01 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 05:47:01 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:47:01 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:47:01 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:47:21 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:47:28 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:47:28 Debug: duration=0 rows=0 BEGIN
2023-02-13 05:47:28 Debug: duration=66 rows=1 UPDATE users SET phone = '111111111111' , modified = '2023-02-13 05:47:28' WHERE id = 3
2023-02-13 05:47:28 Debug: duration=0 rows=0 COMMIT
2023-02-13 05:47:28 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:47:28 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:50:10 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 05:50:10 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-13 05:50:10 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 05:50:10 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 05:50:10 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:50:10 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:50:11 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:50:15 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:50:15 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:50:15 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:50:16 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:51:21 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:51:21 Debug: duration=0 rows=0 BEGIN
2023-02-13 05:51:21 Debug: duration=1 rows=1 UPDATE users SET role_id = 1 , modified = '2023-02-13 05:51:21' WHERE id = 3
2023-02-13 05:51:21 Debug: duration=0 rows=0 COMMIT
2023-02-13 05:51:21 Debug: duration=0 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:51:21 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:51:22 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:51:34 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:51:34 Debug: duration=0 rows=0 BEGIN
2023-02-13 05:51:34 Debug: duration=6 rows=1 UPDATE users SET role_id = 3 , modified = '2023-02-13 05:51:34' WHERE id = 3
2023-02-13 05:51:34 Debug: duration=0 rows=0 COMMIT
2023-02-13 05:51:34 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:51:34 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:51:36 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:52:23 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 05:52:23 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2023-02-13 05:52:23 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 05:52:23 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 05:52:23 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:52:24 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:52:24 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:52:25 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:52:26 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:52:26 Debug: duration=1 rows=8 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 05:52:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 05:52:27 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:53:05 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:53:05 Debug: duration=0 rows=0 BEGIN
2023-02-13 05:53:05 Debug: duration=2 rows=0 UPDATE users SET role_id = NULL , modified = '2023-02-13 05:53:05' WHERE id = 3
2023-02-13 05:53:05 Debug: duration=0 rows=0 ROLLBACK
2023-02-13 05:53:12 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:54:48 Debug: duration=1 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 05:54:48 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-13 05:54:48 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 05:54:48 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 05:54:48 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:55:10 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 05:57:34 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 05:57:34 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-13 05:57:34 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 05:57:34 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 05:57:34 Debug: duration=0 rows=0 BEGIN
2023-02-13 05:57:34 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'yourmail11@gmail.com' LIMIT 1
2023-02-13 05:57:34 Debug: duration=0 rows=1 INSERT INTO users (role_id, email, password, phone, created, modified) VALUES (3, 'yourmail11@gmail.com', '$2y$10$jKlPBAGCL6Xb46jFw1lHj.w5DVO1M7kicwJq9JyOTZUg2cn8Amxc.', '0987654321', '2023-02-13 05:57:34', '2023-02-13 05:57:34')
2023-02-13 05:57:34 Debug: duration=0 rows=0 COMMIT
2023-02-13 05:57:34 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 12 LIMIT 20 OFFSET 0
2023-02-13 05:57:34 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 12
2023-02-13 05:57:37 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 05:57:43 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 05:57:43 Debug: duration=0 rows=0 BEGIN
2023-02-13 05:57:43 Debug: duration=0 rows=1 UPDATE users SET role_id = 1 , modified = '2023-02-13 05:57:43' WHERE id = 12
2023-02-13 05:57:43 Debug: duration=0 rows=0 COMMIT
2023-02-13 05:57:43 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 12 LIMIT 20 OFFSET 0
2023-02-13 05:57:43 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 12
2023-02-13 06:02:22 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 06:02:22 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-13 06:02:22 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 06:02:22 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 06:02:22 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 12 LIMIT 20 OFFSET 0
2023-02-13 06:02:22 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 12
2023-02-13 06:02:25 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:02:40 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-13 06:02:41 Debug: duration=0 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:02:41 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:02:47 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:02:50 Debug: duration=0 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:02:50 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:02:52 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:02:55 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:02:55 Debug: duration=0 rows=0 BEGIN
2023-02-13 06:02:55 Debug: duration=1 rows=1 UPDATE users SET role_id = 3 , modified = '2023-02-13 06:02:55' WHERE id = 12
2023-02-13 06:02:55 Debug: duration=0 rows=0 COMMIT
2023-02-13 06:02:55 Debug: duration=0 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:02:55 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:03:15 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:03:17 Debug: duration=1 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:03:17 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:03:18 Debug: duration=2 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:03:22 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:03:22 Debug: duration=0 rows=0 BEGIN
2023-02-13 06:03:22 Debug: duration=0 rows=1 UPDATE users SET role_id = 1 , modified = '2023-02-13 06:03:22' WHERE id = 12
2023-02-13 06:03:22 Debug: duration=0 rows=0 COMMIT
2023-02-13 06:03:22 Debug: duration=1 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:03:22 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:03:36 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail11@gmail.com' LIMIT 1
2023-02-13 06:03:36 Debug: duration=1 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:03:36 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:03:41 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:03:45 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:03:45 Debug: duration=0 rows=0 BEGIN
2023-02-13 06:03:45 Debug: duration=1 rows=1 UPDATE users SET role_id = 3 , modified = '2023-02-13 06:03:45' WHERE id = 12
2023-02-13 06:03:45 Debug: duration=0 rows=0 COMMIT
2023-02-13 06:03:45 Debug: duration=0 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:03:45 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:03:48 Debug: duration=0 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:03:48 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:03:50 Debug: duration=1 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:03:50 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:04:09 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail11@gmail.com' LIMIT 1
2023-02-13 06:04:09 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 12 LIMIT 20 OFFSET 0
2023-02-13 06:04:09 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 12
2023-02-13 06:04:12 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:10:11 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 06:10:11 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-13 06:10:11 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 06:10:11 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 06:10:11 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:11:05 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:11:21 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail11@gmail.com' LIMIT 1
2023-02-13 06:11:21 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 12 LIMIT 20 OFFSET 0
2023-02-13 06:11:21 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 12
2023-02-13 06:11:23 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:12:28 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 06:12:28 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-13 06:12:28 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 06:12:28 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 06:12:28 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:12:35 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:12:56 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail11@gmail.com' LIMIT 1
2023-02-13 06:13:02 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail11@gmail.com' LIMIT 1
2023-02-13 06:13:03 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 12 LIMIT 20 OFFSET 0
2023-02-13 06:13:03 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 12
2023-02-13 06:13:05 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:13:42 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:15:33 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 06:15:33 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-13 06:15:33 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 06:15:33 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 06:15:33 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:15:33 Debug: duration=0 rows=0 BEGIN
2023-02-13 06:15:33 Debug: duration=0 rows=1 UPDATE users SET role_id = 1 , modified = '2023-02-13 06:15:33' WHERE id = 12
2023-02-13 06:15:33 Debug: duration=0 rows=0 COMMIT
2023-02-13 06:15:33 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 12 LIMIT 20 OFFSET 0
2023-02-13 06:15:33 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 12
2023-02-13 06:16:00 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 12 LIMIT 20 OFFSET 0
2023-02-13 06:16:00 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 12
2023-02-13 06:16:08 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail11@gmail.com' LIMIT 1
2023-02-13 06:16:08 Debug: duration=1 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:16:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:19:46 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 06:19:46 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-13 06:19:46 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 06:19:46 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 06:19:46 Debug: duration=0 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:19:46 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:20:04 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail11@gmail.com' LIMIT 1
2023-02-13 06:20:04 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 12 LIMIT 20 OFFSET 0
2023-02-13 06:20:04 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 12
2023-02-13 06:20:07 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:20:09 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:20:52 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:20:52 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 12 LIMIT 20 OFFSET 0
2023-02-13 06:20:52 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 12
2023-02-13 06:20:55 Debug: duration=2 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:20:57 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:20:57 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 12 LIMIT 20 OFFSET 0
2023-02-13 06:20:57 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 12
2023-02-13 06:21:03 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-13 06:21:03 Debug: duration=1 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:21:03 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:21:09 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:21:11 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:21:11 Debug: duration=0 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:21:11 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:21:13 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:21:21 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 06:21:21 Debug: duration=0 rows=0 BEGIN
2023-02-13 06:21:21 Debug: duration=1 rows=1 UPDATE users SET role_id = 1 , modified = '2023-02-13 06:21:21' WHERE id = 12
2023-02-13 06:21:21 Debug: duration=0 rows=0 COMMIT
2023-02-13 06:21:21 Debug: duration=0 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:21:21 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:21:38 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 06:21:40 Debug: duration=1 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:21:40 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:23:58 Debug: duration=1 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 06:23:58 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-13 06:23:58 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 06:23:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 06:23:58 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@gmail.com' LIMIT 1
2023-02-13 06:23:58 Debug: duration=0 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:23:58 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:24:09 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 06:24:14 Debug: duration=1 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:24:14 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:40:11 Debug: duration=4 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 06:40:11 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-13 06:40:11 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 06:40:11 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 06:40:11 Debug: duration=0 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:40:11 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:40:20 Debug: duration=1 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:40:20 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:40:41 Debug: duration=0 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:40:41 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:42:42 Debug: duration=3 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 06:42:42 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2023-02-13 06:42:42 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 06:42:42 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 06:42:42 Debug: duration=0 rows=9 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2023-02-13 06:42:42 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2023-02-13 06:43:09 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 3 LIMIT 1
2023-02-13 06:43:23 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail11@gmail.com' LIMIT 1
2023-02-13 06:43:23 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 12 LIMIT 20 OFFSET 0
2023-02-13 06:43:23 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 12
2023-02-13 07:02:14 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 07:02:14 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-13 07:02:14 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 07:02:14 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 07:02:14 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 12 LIMIT 20 OFFSET 0
2023-02-13 07:02:14 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 12
2023-02-13 07:02:15 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 12 LIMIT 20 OFFSET 0
2023-02-13 07:02:15 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 12
2023-02-13 07:02:15 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 12 LIMIT 20 OFFSET 0
2023-02-13 07:02:15 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 12
2023-02-13 07:02:22 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 12 LIMIT 1
2023-02-13 07:02:22 Debug: duration=0 rows=0 BEGIN
2023-02-13 07:02:22 Debug: duration=0 rows=1 DELETE FROM users WHERE id = 12
2023-02-13 07:02:22 Debug: duration=0 rows=0 COMMIT
2023-02-13 07:02:22 Debug: duration=0 rows=0 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 12 LIMIT 20 OFFSET 0
2023-02-13 07:02:22 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 12
2023-02-13 07:02:25 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 12 LIMIT 20 OFFSET 0
2023-02-13 07:02:25 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 12
2023-02-13 07:02:26 Debug: duration=0 rows=0 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 12 LIMIT 20 OFFSET 0
2023-02-13 07:02:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 12
2023-02-13 07:02:29 Debug: duration=0 rows=0 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 12 LIMIT 20 OFFSET 0
2023-02-13 07:02:29 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 12
2023-02-13 07:02:37 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'yourmail11@gmail.com' LIMIT 1
2023-02-13 07:03:01 Debug: duration=0 rows=0 BEGIN
2023-02-13 07:03:01 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'yourmail11@gmail.com' LIMIT 1
2023-02-13 07:03:01 Debug: duration=0 rows=1 INSERT INTO users (role_id, email, password, phone, created, modified) VALUES (3, 'yourmail11@gmail.com', '$2y$10$7cWcxmbQBGlBJjw2qM.0NueFMTcwXsa94duquWoAu4s.syKBMh6X2', '0987654321', '2023-02-13 07:03:01', '2023-02-13 07:03:01')
2023-02-13 07:03:01 Debug: duration=0 rows=0 COMMIT
2023-02-13 07:03:01 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 13 LIMIT 20 OFFSET 0
2023-02-13 07:03:01 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 13
2023-02-13 07:05:02 Debug: duration=2 rows=7 SHOW FULL COLUMNS FROM `users`
2023-02-13 07:05:02 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2023-02-13 07:05:02 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakephp3_basics_db' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2023-02-13 07:05:02 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2023-02-13 07:05:02 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 13 LIMIT 1
2023-02-13 07:05:05 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.phone AS `Users__phone`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE id = 13 LIMIT 20 OFFSET 0
2023-02-13 07:05:05 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users WHERE id = 13
